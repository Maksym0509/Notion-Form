{"version":3,"file":"static/js/721.76376a7d.chunk.js","mappings":"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","sources":["components/LoadingButton.js","pages/Auth/SignUp.js"],"sourcesContent":["import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LoadingButton = ({ isLoading, title, className, onClick, disabled }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        className={className}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            <ClipLoader\r\n              css={override}\r\n              aria-label={title}\r\n              size={20}\r\n              color={\"#fff\"}\r\n            />\r\n          </>\r\n        ) : (\r\n          title\r\n        )}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container, Card, Col, Input, Row, CardBody } from \"reactstrap\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authRegister, authReset } from \"../../redux/Extra/authSlice\";\r\nimport signUpImage from \"../../assets/images/auth/sign-up.png\";\r\nimport LoadingButton from \"../../components/LoadingButton\";\r\nimport Logo from \"../../assets/images/logo.png\";\r\n\r\nconst SignUp = () => {\r\n  // Dispatch\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { isSuccess, isError, message } = useSelector((state) => state.auth);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(message);\r\n    } else if (isSuccess) {\r\n      toast.success(\"User Registered Successfully\");\r\n      history.push(\"/signin\");\r\n    }\r\n    dispatch(authReset());\r\n    setIsLoading(false);\r\n  }, [isSuccess, isError]);\r\n\r\n  const onSubmit = (data) => {\r\n    const userData = { ...data };\r\n\r\n    setIsLoading(true);\r\n    dispatch(authRegister(userData));\r\n  };\r\n\r\n  // form validation rules\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .transform((x) => (x === \"\" ? undefined : x))\r\n      .concat(Yup.string().required(\"Password is required\"))\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .transform((x) => (x === \"\" ? undefined : x))\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) {\r\n          return schema.required(\"Confirm Password is required\");\r\n        }\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(validationSchema) };\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n  // form end validation\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"main-content\">\r\n          <div className=\"page-content\">\r\n            <MetaTags>\r\n              <title>User Sign Up | Wizfill</title>\r\n            </MetaTags>\r\n            <section className=\"bg-auth\">\r\n              <Container>\r\n                {\" \"}\r\n                <Row className=\"justify-content-center\">\r\n                  <Col xl={10} lg={12}>\r\n                    <Card className=\"auth-box\">\r\n                      <Row className=\"align-items-center\">\r\n                        <Col lg={6} className=\"text-center\">\r\n                          <CardBody className=\"p-4\">\r\n                            <Link to=\"/\">\r\n                              <img src={Logo} alt=\"\" height=\"50\" />\r\n                            </Link>\r\n                            <div className=\"mt-5\">\r\n                              <img\r\n                                src={signUpImage}\r\n                                alt=\"\"\r\n                                className=\"img-fluid\"\r\n                              />\r\n                            </div>\r\n                          </CardBody>\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                          <CardBody className=\"auth-content p-5 text-white\">\r\n                            <div className=\"w-100\">\r\n                              <div className=\"text-center\">\r\n                                <h5>Let's Get Started</h5>\r\n                                <p className=\"text-white-70\">&nbsp;</p>\r\n                              </div>\r\n                              <form\r\n                                className=\"auth-form\"\r\n                                onSubmit={handleSubmit(onSubmit)}\r\n                              >\r\n                                <div className=\"mb-3\">\r\n                                  <label\r\n                                    htmlFor=\"userInput\"\r\n                                    className=\"form-label\"\r\n                                  >\r\n                                    Name\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    id=\"userInput\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter your name\"\r\n                                    {...register(\"name\")}\r\n                                    className={`form-control ${\r\n                                      errors.name ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.name?.message}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                  <label\r\n                                    htmlFor=\"emailInput\"\r\n                                    className=\"form-label\"\r\n                                  >\r\n                                    Email\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"email\"\r\n                                    id=\"emailInput\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter your email\"\r\n                                    {...register(\"email\")}\r\n                                    className={`form-control ${\r\n                                      errors.email ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.email?.message}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                  <label\r\n                                    htmlFor=\"passwordInput\"\r\n                                    className=\"form-label\"\r\n                                  >\r\n                                    Password\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    id=\"passwordInput\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter your password\"\r\n                                    {...register(\"password\")}\r\n                                    className={`form-control ${\r\n                                      errors.password ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.password?.message}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                  <label\r\n                                    htmlFor=\"confirmPasswordInput\"\r\n                                    className=\"form-label\"\r\n                                  >\r\n                                    Confirm Password\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    name=\"confirmPassword\"\r\n                                    id=\"confirmPasswordInput\"\r\n                                    placeholder=\"Confirm your password\"\r\n                                    {...register(\"confirmPassword\")}\r\n                                    className={`form-control ${\r\n                                      errors.confirmPassword ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.confirmPassword?.message}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                  <div className=\"form-check\">\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"flexCheckDefault\"\r\n                                    >\r\n                                      &nbsp;\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                  <LoadingButton\r\n                                    disabled={isLoading}\r\n                                    className={\r\n                                      \"btn btn-primary btn-hover w-100\"\r\n                                    }\r\n                                    isLoading={isLoading}\r\n                                    title={\"Join\"}\r\n                                  />\r\n                                </div>\r\n                              </form>\r\n                              <div className=\"mt-3 text-center\">\r\n                                <p className=\"mb-0\">\r\n                                  Already a member ?{\" \"}\r\n                                  <Link\r\n                                    to=\"/signin\"\r\n                                    className=\"fw-medium text-white text-decoration-underline\"\r\n                                  >\r\n                                    {\" \"}\r\n                                    Sign In{\" \"}\r\n                                  </Link>\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["override","css","_templateObject","_taggedTemplateLiteral","_ref","isLoading","title","className","onClick","disabled","_jsx","React","children","type","_Fragment","ClipLoader","size","color","_errors$name","_errors$email","_errors$password","_errors$confirmPasswo","history","useHistory","dispatch","useDispatch","_useSelector","useSelector","state","auth","isSuccess","isError","message","_useState","useState","_useState2","_slicedToArray","setIsLoading","useEffect","toast","error","success","push","authReset","validationSchema","Yup","shape","name","required","email","password","transform","x","undefined","concat","min","confirmPassword","when","schema","oneOf","formOptions","resolver","yupResolver","_useForm","useForm","register","handleSubmit","errors","formState","_jsxs","MetaTags","Container","Row","Col","xl","lg","Card","CardBody","Link","to","src","Logo","alt","height","signUpImage","onSubmit","data","userData","_objectSpread","authRegister","htmlFor","id","placeholder","LoadingButton"],"sourceRoot":""}