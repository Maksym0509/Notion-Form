{"version":3,"file":"static/js/660.35f26135.chunk.js","mappings":"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","sources":["components/LoadingButton.js","config/firebase.js","helper/fileUpload.js","pages/Form/FormGenerator.js","pages/Form/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LoadingButton = ({ isLoading, title, className, onClick, disabled }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        className={className}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            <ClipLoader\r\n              css={override}\r\n              aria-label={title}\r\n              size={20}\r\n              color={\"#fff\"}\r\n            />\r\n          </>\r\n        ) : (\r\n          title\r\n        )}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDNH2q9YDMvu2nSfAWg_-4yg_Bk9UrQ28o\",\r\n  authDomain: \"fence-calculator-127fb.firebaseapp.com\",\r\n  databaseURL: \"https://fence-calculator-127fb-default-rtdb.firebaseio.com\",\r\n  projectId: \"fence-calculator-127fb\",\r\n  storageBucket: \"fence-calculator-127fb.appspot.com\",\r\n  messagingSenderId: \"410588364811\",\r\n  appId: \"1:410588364811:web:f0eb6d0950c2624c28470e\",\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app);\r\n","import { ref, uploadBytesResumable, getDownloadURL } from \"@firebase/storage\";\r\nimport { storage } from \"../config/firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst fileUpload = async (file) => {\r\n  try {\r\n    const fileRef = ref(storage, \"notion/\" + uuidv4());\r\n    const snapshot = await uploadBytesResumable(fileRef, file);\r\n    const url = await getDownloadURL(snapshot.ref);\r\n\r\n    return url;\r\n  } catch (error) {\r\n    toast.error(\"File upload error\");\r\n\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default fileUpload;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { formReset, save } from \"../../redux/Form/formSlice\";\r\nimport { ReactFormGenerator } from \"react-form-builder2\";\r\nimport LoadingButton from \"../../components/LoadingButton\";\r\nimport fileUpload from \"../../helper/fileUpload\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst FormGenerator = () => {\r\n  const dispatch = useDispatch();\r\n  const { isSuccess, isError, message, formData, selectedTable } = useSelector(\r\n    (state) => state.form\r\n  );\r\n\r\n  const [isSubmitBtnLoading, setIsSubmitBtnLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsSubmitBtnLoading(false);\r\n    if (isError) {\r\n      toast.error(message);\r\n    } else if (isSuccess) {\r\n      if (message === \"submitted\") {\r\n        toast.success(\"Successfully submitted!\");\r\n      }\r\n    }\r\n    dispatch(formReset());\r\n  }, [isSuccess, isError]);\r\n\r\n  const onSubmit = (data) => {\r\n    setIsSubmitBtnLoading(true);\r\n\r\n    const newData = formData.reduce((map, obj) => {\r\n      map[obj.id] = obj;\r\n      return map;\r\n    }, {});\r\n\r\n    const promises = data.map(async (obj) => {\r\n      if (newData[obj.id]) {\r\n        if (\r\n          newData[obj.id].element === \"Camera\" ||\r\n          newData[obj.id].element === \"FileUpload\"\r\n        ) {\r\n          const imgSrc =\r\n            obj.value !== null ? await fileUpload(obj.value) : null;\r\n\r\n          if (imgSrc) {\r\n            return {\r\n              ...obj,\r\n              value: imgSrc,\r\n              label: newData[obj.id].label?.trim(),\r\n            };\r\n          }\r\n        } else {\r\n          return {\r\n            ...obj,\r\n            label: newData[obj.id].label?.trim(),\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    Promise.all(promises).then((results) => {\r\n      results = results.filter(function (element) {\r\n        return element !== undefined;\r\n      });\r\n      dispatch(save({ formData: results, table: selectedTable }));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {formData ? (\r\n          <ReactFormGenerator\r\n            action_name=\"Submit\"\r\n            form_action=\"/\"\r\n            form_method=\"POST\"\r\n            onSubmit={onSubmit}\r\n            submitButton={\r\n              <LoadingButton\r\n                disabled={isSubmitBtnLoading}\r\n                className={\"btn btn-primary submitBtn\"}\r\n                isLoading={isSubmitBtnLoading}\r\n                title={\"Submit\"}\r\n              />\r\n            }\r\n            data={formData}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FormGenerator;\r\n","import React, { useEffect } from \"react\";\r\nimport { Col, Row, Card, CardBody, Container } from \"reactstrap\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getForm } from \"../../redux/Form/formSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/images/logo.png\";\r\nimport FormGenerator from \"./FormGenerator\";\r\nimport \"react-form-builder2/dist/app.css\";\r\nimport \"./index.css\";\r\n\r\nconst Form = ({ match }) => {\r\n  const {\r\n    params: { formId },\r\n  } = match;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getForm({ formId: formId }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MetaTags>\r\n        <title>Wizfill | Form</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.13.0/css/all.css\"\r\n        />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n          crossorigin=\"anonymous\"\r\n        />\r\n      </MetaTags>\r\n      <section className=\"section\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={8}>\r\n              <div className=\"formLogo justify-content-center\">\r\n                <Link\r\n                  className=\"navbar-brand text-dark fw-bold me-auto mb-4\"\r\n                  to=\"http://localhost:3000/\"\r\n                >\r\n                  <img src={Logo} alt=\"\" height=\"50\" />\r\n                </Link>\r\n              </div>\r\n              <Card className=\"profile-content-page mt-4 mt-lg-0\">\r\n                <CardBody className=\"p-4\">\r\n                  <FormGenerator />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"names":["override","css","_templateObject","_taggedTemplateLiteral","_ref","isLoading","title","className","onClick","disabled","_jsx","React","children","type","_Fragment","ClipLoader","size","color","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","fileUpload","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","fileRef","snapshot","url","wrap","_context","prev","next","ref","uuidv4","uploadBytesResumable","sent","getDownloadURL","abrupt","t0","toast","error","stop","_x","apply","arguments","dispatch","useDispatch","_useSelector","useSelector","state","form","isSuccess","isError","message","formData","selectedTable","_useState","useState","_useState2","_slicedToArray","isSubmitBtnLoading","setIsSubmitBtnLoading","useEffect","success","formReset","ReactFormGenerator","action_name","form_action","form_method","onSubmit","data","newData","reduce","map","obj","id","promises","imgSrc","_newData$obj$id$label","_newData$obj$id$label2","element","value","_objectSpread","label","trim","Promise","all","then","results","filter","undefined","save","table","submitButton","LoadingButton","formId","match","params","getForm","_jsxs","MetaTags","rel","href","integrity","crossorigin","Container","Row","Col","lg","Link","to","src","Logo","alt","height","Card","CardBody","FormGenerator"],"sourceRoot":""}